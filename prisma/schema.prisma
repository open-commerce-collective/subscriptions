datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model SellingPlanGroup {
  id            String        @id @default(uuid())
  name          String
  merchant_code String
  description   String?
  options       String[]
  position      Int
  selling_plans SellingPlan[]
  products      Product[]     @relation("ProductSellingPlanGroups")
  variants      Variant[]     @relation("VariantSellingPlanGroups")
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
}

model SellingPlan {
  id                    String              @id @default(uuid())
  name                  String
  description           String?
  options               String
  position              Int
  category              SellingPlanCategory
  billing_policy        Json
  delivery_policy       Json
  pricing_policies      Json[]
  selling_plan_group_id String
  selling_plan_group    SellingPlanGroup    @relation(fields: [selling_plan_group_id], references: [id])
  subscription_lines    SubscriptionLine[]
  created_at            DateTime            @default(now())
  updated_at            DateTime            @updatedAt
  Subscription          Subscription[]
}

model Subscription {
  id                   String                 @id @default(uuid())
  customer_id          String
  plan_id              String
  start_date           DateTime
  frequency            Int
  frequency_unit       FrequencyUnit
  shipping_address     String?
  shipping_method      String?
  payment_method_id    String
  metadata             String?
  currency             String?
  promo_code           String?
  trial_period         String?
  is_digital           Boolean
  status               String
  lines                SubscriptionLine[]
  selling_plan_id      String?
  selling_plan         SellingPlan?           @relation(fields: [selling_plan_id], references: [id])
  created_at           DateTime               @default(now())
  updated_at           DateTime               @updatedAt
  SubscriptionActivity SubscriptionActivity[]
}

model SubscriptionLine {
  id                    String       @id @default(uuid())
  subscription_id       String
  product_variant_id    String
  quantity              Int
  current_price         Decimal
  selling_plan_id       String?
  selling_plan          SellingPlan? @relation(fields: [selling_plan_id], references: [id])
  custom_attributes     Json?
  discounts             Json?
  recurring_cycle_limit Int?
  created_at            DateTime     @default(now())
  updated_at            DateTime     @updatedAt
  subscription          Subscription @relation(fields: [subscription_id], references: [id])
}

model OneTimeAddOn {
  id              String   @id @default(uuid())
  subscription_id String
  product_id      String
  quantity        Int
  price           Float
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
}

model Subscriber {
  id         String   @id @default(uuid())
  email      String   @unique
  first_name String?
  last_name  String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Order {
  id              String   @id @default(uuid())
  subscription_id String?
  customer_id     String
  total_price     Float
  status          String
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
}

model Product {
  id                    String             @id @default(uuid())
  title                 String
  description           String?
  requires_selling_plan Boolean            @default(false)
  selling_plan_groups   SellingPlanGroup[] @relation("ProductSellingPlanGroups")
  variants              Variant[]
  created_at            DateTime           @default(now())
  updated_at            DateTime           @updatedAt
}

model Variant {
  id                  String             @id @default(uuid())
  product_id          String
  product             Product            @relation(fields: [product_id], references: [id])
  title               String
  price               Decimal
  selling_plan_groups SellingPlanGroup[] @relation("VariantSellingPlanGroups")
  created_at          DateTime           @default(now())
  updated_at          DateTime           @updatedAt
}

model Webhook {
  id         String   @id @default(uuid())
  topic      String
  address    String
  format     String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model SubscriptionActivity {
  id              String       @id @default(uuid())
  subscription_id String
  action          String
  created_at      DateTime     @default(now())
  subscription    Subscription @relation(fields: [subscription_id], references: [id])
}

enum FrequencyUnit {
  DAY
  WEEK
  MONTH
  YEAR
}

enum SellingPlanCategory {
  SUBSCRIPTION
  TRY_BEFORE_YOU_BUY
}
